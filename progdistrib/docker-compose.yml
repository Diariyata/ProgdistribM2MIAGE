services:
  frontend:
    build:
      context: ./app-frontend
      dockerfile: Dockerfile
    container_name: app-frontend
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf 
    networks:
      - progdistrib_network

  api:
    build:
      context: ./api
    container_name: api
    ports:
      - "3000:3000"
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: test
      DB_NAME: progdistrib_db
      CHOKIDAR_USEPOLLING: "true"  # Pour la surveillance des fichiers
    depends_on:
      - db
    networks:
      - progdistrib_network
    volumes:
      - ./api:/app
      - /app/node_modules
    command: npm run dev


  db:
    image: postgres
    container_name: db_api
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: progdistrib_db
    volumes:
      - projet_db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql 
      
    networks:
      - progdistrib_network

networks:
  progdistrib_network:
    driver: bridge

volumes:
  projet_db:
    driver: local

